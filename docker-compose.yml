services:
  web:
    container_name: 'dbtips-dossier'
    build:
      context: frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URI=${VITE_API_URI}
        - VITE_TARGET_DOSSIER_URI=${VITE_TARGET_DOSSIER_URI}
    restart: always
    labels:
      - "description=DBTips Dossier Frontend"
      - "user=${USER}"  # Changed from ${username} to ${USER}

  backend:
    container_name: 'dbtips-merge-backend'
    build:
      context: backend
      dockerfile: Dockerfile
    restart: always
    # ports:
    #- "8000:8000"
    labels:
      - "description=DBTips Dossier Backend"
      - "user=${USER}"  # Changed from ${username} to ${USER}
      - "port=8000"     # Added explicit port since it's non-standard
      # - "security=none"  # Uncommented if you want no authentication
    environment:
      - UVICORN_HOST=0.0.0.0
      - UVICORN_PORT=8000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GRAPHRAG_DATA_DIR=${GRAPHRAG_DATA_DIR}
      - LLM_MODEL=${LLM_MODEL}
      - SERP_API_KEY=${SERP_API_KEY}
      - BIOGRID_API_KEY=${BIOGRID_API_KEY}
      - STRAPI_BASE_URL=${STRAPI_BASE_URL}
      - STRAPI_API_TOKEN=${STRAPI_API_TOKEN}
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - provider=${provider}
      - endpoint=${endpoint}
      - username=${username}
      - password=${password}
      - model=${model}
      - ENTITY_DB_PATH=${ENTITY_DB_PATH}
      - NCBI_EMAIL=${NCBI_EMAIL}
      - NCBI_API_KEY=${NCBI_API_KEY}
      - OPEN_CITATIONS_API=${OPEN_CITATIONS_API}
      - PATIENT_STORIES_URL=${PATIENT_STORIES_URL}
    volumes:
      - ./backend/res-immunology-automation/res_immunology_automation/src/scripts/cached_data_json:/app/res-immunology-automation/res_immunology_automation/src/scripts/cached_data_json
      - ./backend/data:/app/database
      - ./backend/res-immunology-automation/res_immunology_automation/src/scripts/logs:/app/res-immunology-automation/res_immunology_automation/src/scripts/logs
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_healthy

  backend-llm:
    container_name: 'dbtips-merge-backend-llm'
    build:
      context: disease-dossier-backend-llm/backend-llm
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./disease-dossier-backend-llm/backend-llm/static:/app/static
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REDIS_HOST=redis-llm
      - REDIS_PORT=6379
      - PERPLEXITY_KEY=${PERPLEXITY_KEY}
      - AACT_DB_NAME=${AACT_DB_NAME}
      - AACT_DB_USER=${AACT_DB_USER}
      - AACT_DB_PASSWORD=${AACT_DB_PASSWORD}
      - AACT_DB_HOST=${AACT_DB_HOST}
      - AACT_DB_PORT=${AACT_DB_PORT}
      - username=${username}
      - password=${password}
      - PATIENT_STORIES_URL=${PATIENT_STORIES_URL}
    labels:
      - "description=DBTips Dossier Backend LLM"
      - "user=${USER}"  # Changed from ${username} to ${USER}

  redis-llm:
    image: redis:latest
    container_name: 'dbtips-merge-redis-llm'
    restart: always
    volumes:
      - ./disease-dossier-backend-llm/backend-llm/redis/redis-data:/data
    labels:
      - "exclude=true"  # Keep this excluded - it's an internal service
      - "user=${USER}"  # Changed from ${username} to ${USER}

  redis:
    container_name: 'dbtips-merge-dossier-redis'
    build:
      context: backend/redis
      dockerfile: Dockerfile
      args:
        - REDIS_PASSWORD=${REDIS_PASSWORD}
    restart: always
    volumes:
      - ./backend/redis/redis-data:/data
    labels:
      - "exclude=true"  # Keep this excluded - it's an internal service
      - "user=${USER}"  # Changed from ${username} to ${USER}

  postgres:
    container_name: 'dbtips-merge-postgres'
    image: postgres:13
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h postgres']
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    labels:
      - "exclude=true"  # Keep this excluded - database should NOT be exposed
      - "user=${USER}"  # Changed from ${username} to ${USER}

  pgadmin:
    container_name: 'dbtips-merge-pgadmin'
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      # ports:
      # - "5050:80"
      # volumes:
      # - ./pgadmin:/var/lib/pgadmin
    depends_on:
      - postgres
    labels:
      - "description=DBTips Dossier pgAdmin for PostgreSQL Management"
      - "user=${USER}"  # Changed from ${username} to ${USER}
      - "port=80"       # Added explicit port for pgAdmin